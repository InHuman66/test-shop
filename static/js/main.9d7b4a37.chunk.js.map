{"version":3,"sources":["main/ui/components/main/main.module.scss","main/ui/components/newProduct/newProduct.module.scss","main/ui/components/product/product.module.scss","main/ui/components/is-sure/isSure.module.scss","main/ui/components/Header/header.module.scss","main/ui/components/product-presentation/productPresentation.module.scss","main/ui/components/product/product.tsx","main/ui/components/newProduct/newProduct.tsx","main/bll/reducers/app-reducer.ts","main/ui/components/newProduct/newProductContainer.tsx","main/ui/components/main/main.tsx","main/ui/components/main/mainContainer.tsx","main/ui/components/is-sure/isSure.tsx","main/ui/components/product-presentation/productPresentation.tsx","main/ui/components/product-presentation/productPresentationContainer.tsx","main/ui/components/Header/header.tsx","App.tsx","reportWebVitals.ts","main/bll/redux-state.ts","index.tsx"],"names":["module","exports","Product","props","className","classes","background_item","to","id","alt","src","img","description_block_style","name","description_elem","price","count","btn_more","NewProduct","newProduct","modalWindow","wrapper_btn_cancel","onClick","hideModal","onSubmit","formik","handleSubmit","modalItem","getFieldProps","placeholder","errors","touched","type","min","modalItemDescription","wrapper_btn_add","btn_add","itemError","imageUrl","description","size","width","height","weight","comments","initialState","itemsData","selectedItem","setItemsDataAC","data","getItemsTC","dispatch","a","localStorage","getItem","Promise","resolve","reject","JSON","parse","NewProductContainer","useDispatch","useFormik","initialValues","imageURL","validate","values","test","newItem","nanoid","Number","oldArr","newArr","setItem","stringify","Main","useState","modal_new_product_hide","styleModal","setStyleModal","wrapper_modal","menu_style","sort_menu_style","onClickSortName","btn_sort_style","onClickSortCountMore","onClickSortCountSmall","onChange","e","onClickSortAvailable","target","checked","modal_new_product","btn_newProduct_style","dataItems","map","elem","MainContainer","useSelector","state","appReducer","sortAvailableTC","IsSure","positionModal","backGround","OnClickYes","btn_sure","onClickNo","btn_no","ProductPresentation","comment","setComment","styleModalDelete","setStyleModalDelete","back_ground","deleteItem","img_style","manage_block","btn_block","button_edit","button_delete","height_desc","low_desc","low_info_style","comments_block","positionItems","currentTarget","value","sendCommentItem","date","ProductPresentationContainer","params","useParams","item","useEffect","itemId","console","log","today","Date","dd","String","getDate","padStart","getMonth","getFullYear","newComment","productId","addCommentTC","filter","deleteItemTC","Header","home_btn","App","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducersBatch","combineReducers","action","some","u","find","sort","b","localeCompare","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9d7b4a37.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu_style\":\"main_menu_style__2veLE\",\"sort_menu_style\":\"main_sort_menu_style__2sLMG\",\"btn_sort_style\":\"main_btn_sort_style__2fosZ\",\"btn_newProduct_style\":\"main_btn_newProduct_style__1bjyL\",\"wrapper_modal\":\"main_wrapper_modal__3jzNA\",\"modal_new_product\":\"main_modal_new_product__3ue8N\",\"modal_new_product_hide\":\"main_modal_new_product_hide__hoWe7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newProduct\":\"newProduct_newProduct__3V38U\",\"modalWindow\":\"newProduct_modalWindow__2H0sG\",\"wrapper_btn_cancel\":\"newProduct_wrapper_btn_cancel__-TWs2\",\"modalItem\":\"newProduct_modalItem__1rKMs\",\"modalItemDescription\":\"newProduct_modalItemDescription__2UX3p\",\"wrapper_btn_add\":\"newProduct_wrapper_btn_add__23PiG\",\"btn_add\":\"newProduct_btn_add__1YzEm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background_item\":\"product_background_item__23nO7\",\"description_block_style\":\"product_description_block_style__1aXVe\",\"description_elem\":\"product_description_elem__2o81v\",\"btn_more\":\"product_btn_more__25JpK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"positionModal\":\"isSure_positionModal__37WaB\",\"backGround\":\"isSure_backGround__2x3_T\",\"btn_sure\":\"isSure_btn_sure__1So3_\",\"btn_no\":\"isSure_btn_no__AliOs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backGround\":\"header_backGround__2PGtO\",\"home_btn\":\"header_home_btn__2yHyR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"back_ground\":\"productPresentation_back_ground__3n39a\",\"img_style\":\"productPresentation_img_style__mq-0-\",\"manage_block\":\"productPresentation_manage_block__2eAos\",\"btn_block\":\"productPresentation_btn_block__TQsYg\",\"button_edit\":\"productPresentation_button_edit__3vewa\",\"button_delete\":\"productPresentation_button_delete__3opYY\",\"height_desc\":\"productPresentation_height_desc__2gEi_\",\"low_desc\":\"productPresentation_low_desc__1MMbh\",\"low_info_style\":\"productPresentation_low_info_style__3Z-sR\",\"comments_block\":\"productPresentation_comments_block__2s9HL\",\"positionItems\":\"productPresentation_positionItems__UuyxY\",\"modal_new_product\":\"productPresentation_modal_new_product__13xYI\",\"modal_new_product_hide\":\"productPresentation_modal_new_product_hide__2JEj6\"};","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classes from \"./product.module.scss\"\r\n\r\ntype propsType ={\r\n    id:string\r\n    name: string\r\n    img: string\r\n    description: string\r\n    count:number\r\n    price: number\r\n}\r\n\r\nconst Product:React.FC<propsType> = (props)=>{\r\n    return(\r\n        <div className={'col-3'}>\r\n            <div className={classes.background_item}>\r\n                <NavLink to={`/item/` + props.id}>\r\n                    <img alt={''} src={props.img}/>\r\n                </NavLink>\r\n                <div className={classes.description_block_style}>\r\n                    <h1>{props.name}</h1>\r\n                    <div className={classes.description_elem}>\r\n                        <p>Price: </p>\r\n                        <p>{props.price}</p>\r\n                    </div>\r\n                    <div className={classes.description_elem}>\r\n                        <p>Count: </p>\r\n                        <p>{props.count}</p>\r\n                    </div>\r\n                    <div className={classes.description_elem}>\r\n                        <p>available: </p>\r\n                        {props.count !== 0 ? <p>True</p> : <p>False</p>}\r\n                    </div>\r\n                </div>\r\n                <NavLink to={`/item/` + props.id}><button className={classes.btn_more}>More</button></NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Product","import React from \"react\";\r\nimport classes from \"./newProduct.module.scss\"\r\nimport {FormikProps} from \"formik\";\r\nimport { FormikValuesType } from \"./newProductContainer\";\r\n\r\ntype propsType={\r\n    hideModal: ()=>void\r\n    formik: FormikProps<FormikValuesType>\r\n}\r\n\r\nconst NewProduct:React.FC<propsType> = (props)=>{\r\n    return(\r\n        <div className={classes.newProduct}>\r\n            <div className={classes.modalWindow}>\r\n                <div className={classes.wrapper_btn_cancel}>\r\n                    <button onClick={()=>{props.hideModal()}}>Cancel</button>\r\n                </div>\r\n                <form onSubmit={props.formik.handleSubmit}>\r\n                    <div className={classes.modalItem}>\r\n                        <p>Name: </p>\r\n                        <input {...props.formik.getFieldProps('name')} placeholder={'Name'}/>\r\n                    </div>\r\n                    <div className={classes.modalItem}>\r\n                        <p>Image URL: </p>\r\n                        <input {...props.formik.getFieldProps('imageURL')} placeholder={'Url'}/>\r\n                    </div>\r\n                    <div className={classes.modalItem}>\r\n                        <p>Count: </p>\r\n                        <input {...props.formik.getFieldProps('count')} placeholder={'Count'}  />\r\n                        {props.formik.errors.count && props.formik.touched.count ? <div ><p>{props.formik.errors.count}</p></div> : null}\r\n                    </div>\r\n                    <div className={classes.modalItem}>\r\n                        <p>Price in dollars: </p>\r\n                        <input  {...props.formik.getFieldProps('price')} placeholder={'Prise'} type={'number'} min=\"0\"/>\r\n                    </div>\r\n                    <div className={classes.modalItem}>\r\n                        <p>Weight in grams: </p>\r\n                        <input {...props.formik.getFieldProps('weight')} placeholder={'Weight'} type={'number'} min=\"0\"/>\r\n                    </div>\r\n                    <div className={classes.modalItem}>\r\n                        <p>Size in millimeters: </p>\r\n                        <input {...props.formik.getFieldProps('width')} placeholder={'Width'} type={'number'} min=\"0\"/>\r\n                        <input {...props.formik.getFieldProps('height')} placeholder={'Height'} type={'number'} min=\"0\"/>\r\n                    </div>\r\n                    <div className={classes.modalItemDescription}>\r\n                        <p>Description: </p>\r\n                        <textarea  {...props.formik.getFieldProps('description')} placeholder={'Your description'}/>\r\n                    </div>\r\n                    <div className={classes.wrapper_btn_add}>\r\n                        <button type={'submit'} className={classes.btn_add}>Add</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default NewProduct","import { Dispatch } from \"redux\"\r\n\r\nexport type itemsDataType ={\r\n    id: string\r\n    price: number\r\n    imageUrl: string\r\n    name: string\r\n    count: number\r\n    description: string\r\n    size: {\r\n        width: number\r\n        height: number\r\n    },\r\n    weight: string\r\n    comments: Array<{\r\n        id: string\r\n        productId:string\r\n        description:string\r\n        date: string\r\n    }> | []\r\n\r\n}\r\nlet itemError={\r\n    id: '0awdadadawdad',\r\n    price: 20,\r\n    imageUrl: 'dawdwa',\r\n    name: 'dawdawd',\r\n    count: 0,\r\n    description: 'dwdawdw',\r\n    size: {\r\n        width: 20,\r\n        height: 20,\r\n    },\r\n    weight: 'adwdawwad',\r\n    comments:  []\r\n}\r\n\r\ntype setItemsDataType ={\r\n    type: 'SET-ITEMS-DATA'\r\n    data: Array<itemsDataType>\r\n}\r\ntype setSelectedItemType ={\r\n    type: 'SET-SELECTED-ITEM'\r\n    id:string\r\n}\r\ntype sortItemsDataCountSmallType={\r\n    type: 'SORT-DATA-SMALL-COUNT'\r\n}\r\ntype sortItemsDataCountMoreType ={\r\n    type:'SORT-DATA-MORE-COUNT'\r\n}\r\ntype sortItemsDataNameType ={\r\n    type:'SORT-DATA-NAME'\r\n}\r\ntype sortItemsDataCountType ={\r\n    type:'SORT-DATA-COUNT'\r\n}\r\n\r\n\r\nconst initialState = {\r\n    itemsData:[]as Array<itemsDataType>,\r\n    selectedItem: itemError as itemsDataType\r\n}\r\ntype ActionsType =\r\n    setItemsDataType\r\n    | setSelectedItemType\r\n    | sortItemsDataCountSmallType\r\n    | sortItemsDataCountMoreType\r\n    | sortItemsDataNameType\r\n    | sortItemsDataCountType\r\n\r\ntype InitialStateType = typeof initialState\r\n\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SET-ITEMS-DATA':\r\n            return {...state, itemsData: action.data}\r\n        case 'SET-SELECTED-ITEM':\r\n            let newItem = itemError\r\n            if(state.itemsData.some(u => u.id === action.id)){\r\n                // @ts-ignore\r\n                newItem = state.itemsData.find(item => item.id === action.id)\r\n            }else {\r\n            }// @ts-ignore\r\n            return {...state, selectedItem: newItem}\r\n        case 'SORT-DATA-SMALL-COUNT':\r\n            return {...state, itemsData: [...state.itemsData.sort((a, b)=>a.count - b.count)]}\r\n        case 'SORT-DATA-MORE-COUNT':\r\n            return {...state, itemsData: [...state.itemsData.sort((a, b)=>b.count - a.count)]}\r\n        case 'SORT-DATA-NAME':\r\n            return {...state, itemsData: [...state.itemsData.sort((a, b) => a.name.localeCompare(b.name))]}\r\n        case 'SORT-DATA-COUNT':\r\n            return {...state, itemsData: [...state.itemsData.filter(item => item.count !== 0)]}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport  const setItemsDataAC= (data:Array<itemsDataType>):setItemsDataType=>{\r\n    return {\r\n        type:'SET-ITEMS-DATA',\r\n        data: data,\r\n    }\r\n}\r\nexport  const setSelectedItemDataAC= (id:string):setSelectedItemType=>{\r\n    return {\r\n        type:'SET-SELECTED-ITEM',\r\n        id: id,\r\n    }\r\n}\r\nexport  const sortItemsDataCountSmallAC= ():sortItemsDataCountSmallType=>{\r\n    return {\r\n        type:'SORT-DATA-SMALL-COUNT',\r\n    }\r\n}\r\nexport  const sortItemsDataCountMoreAC= ():sortItemsDataCountMoreType=>{\r\n    return {\r\n        type:'SORT-DATA-MORE-COUNT',\r\n    }\r\n}\r\nexport  const sortItemsDataNameAC= ():sortItemsDataNameType=>{\r\n    return {\r\n        type:'SORT-DATA-NAME',\r\n    }\r\n}\r\nexport  const sortItemsDataCountAC= ():sortItemsDataCountType=>{\r\n    return {\r\n        type:'SORT-DATA-COUNT',\r\n    }\r\n}\r\nexport  const getItemsTC  =()=>  async (dispatch:Dispatch)=>{\r\n    let itemsData = await localStorage.getItem('itemsData')\r\n    return new Promise((resolve, reject)=>{\r\n        if (typeof itemsData === \"string\"){\r\n            dispatch(setItemsDataAC(JSON.parse(itemsData)))\r\n        }else {\r\n        }\r\n    })\r\n}\r\n\r\nexport  const addItemTC  =(newItem:itemsDataType)=>  async (dispatch:Dispatch)=>{\r\n    let itemsData = await localStorage.getItem('itemsData')\r\n    return new Promise((resolve, reject)=>{\r\n        if (typeof itemsData === \"string\"){\r\n            let oldArr = JSON.parse(itemsData)\r\n            let newArr = [...oldArr, newItem]\r\n            localStorage.setItem('itemsData', JSON.stringify(newArr))\r\n            dispatch(setItemsDataAC(newArr))\r\n        }else {\r\n            let newArr = [newItem]\r\n            localStorage.setItem('itemsData', JSON.stringify(newArr))\r\n            dispatch(setItemsDataAC(newArr))\r\n        }\r\n    })\r\n}\r\nexport  const addCommentTC  =(id: string, comment:{id: string, productId:string, description:string, date: string})=>  async (dispatch:Dispatch)=>{\r\n    let itemsData = await localStorage.getItem('itemsData')\r\n    return new Promise((resolve, reject)=>{\r\n        if (typeof itemsData === \"string\"){\r\n            let oldArr:Array<itemsDataType> = JSON.parse(itemsData)\r\n            let newArr = oldArr.map(elem => elem.id === id ? {...elem, comments: [...elem.comments, comment] } : elem)\r\n            localStorage.setItem('itemsData', JSON.stringify(newArr))\r\n            dispatch(setItemsDataAC(JSON.parse(itemsData)))\r\n        }else {\r\n\r\n        }\r\n    })\r\n}\r\nexport  const deleteItemTC  =(id:string)=>  async (dispatch:Dispatch)=>{\r\n    let itemsData = await localStorage.getItem('itemsData')\r\n    return new Promise((resolve, reject)=>{\r\n        if (typeof itemsData === \"string\"){\r\n            let oldArr:Array<itemsDataType> = JSON.parse(itemsData)\r\n            let newArr = [...oldArr.filter(item => {return item.id === id} )]\r\n            localStorage.setItem('itemsData', JSON.stringify(newArr))\r\n            dispatch(setItemsDataAC(newArr))\r\n        }else {\r\n        }\r\n    })\r\n}\r\n\r\nexport  const sortAvailableTC  =(data: boolean)=>  async (dispatch:Dispatch)=>{\r\n            if(data){\r\n                dispatch(sortItemsDataCountAC())\r\n            }else if (!data) {\r\n                // @ts-ignore\r\n                dispatch(getItemsTC())\r\n            }\r\n}","import { useFormik } from \"formik\";\r\nimport React from \"react\";\r\nimport NewProduct from \"./newProduct\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport { addItemTC } from \"../../../bll/reducers/app-reducer\";\r\nimport { nanoid } from 'nanoid'\r\n\r\ntype propsType ={\r\n    hideModal: ()=>void\r\n}\r\ntype FormikErrorType = {\r\n    name?: string\r\n    imageURL?: string\r\n    count?: string\r\n    price?: string\r\n    weight?: string\r\n    width?: string\r\n    height?: string\r\n    description?: string\r\n}\r\nexport type FormikValuesType ={\r\n    name: string\r\n    imageURL: string\r\n    count: string\r\n    price: string\r\n    weight: string\r\n    width: string\r\n    height: string\r\n    description: string\r\n}\r\n\r\nconst NewProductContainer:React.FC<propsType> = (props)=>{\r\n    const dispatch = useDispatch()\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            name: '',\r\n            imageURL: '',\r\n            count: '',\r\n            price: '',\r\n            weight: '',\r\n            width: '',\r\n            height: '',\r\n            description:'',\r\n\r\n        },\r\n        validate:(values)=>{\r\n            const errors: FormikErrorType = {};\r\n            if (!values.name) {\r\n                errors.name = 'Required';\r\n            }\r\n            if (!values.imageURL) {\r\n                errors.imageURL = 'Required';\r\n            }\r\n            if (!values.count) {\r\n                errors.count = 'Required';\r\n            }else if (/[^0-9]/.test(values.count)){\r\n                errors.count = 'Only numbers'\r\n            }\r\n            if (!values.price) {\r\n                errors.price = 'Required';\r\n            }else if (/[^0-9]/.test(values.price)){\r\n                errors.price = 'Only numbers'\r\n            }\r\n            if (!values.weight) {\r\n                errors.weight = 'Required';\r\n            }else if (/[^0-9]/.test(values.weight)){\r\n                errors.weight = 'Only numbers'\r\n            }\r\n            if (!values.height) {\r\n                errors.height = 'Required';\r\n            }else if (/[^0-9]/.test(values.height)){\r\n                errors.height = 'Only numbers'\r\n            }\r\n            if (!values.width) {\r\n                errors.width = 'Required';\r\n            }else if (/[^0-9]/.test(values.width)){\r\n                errors.width = 'Only numbers'\r\n            }\r\n            if (!values.description) {\r\n                errors.description = 'Required';\r\n            }\r\n\r\n            return errors;\r\n        },\r\n        onSubmit: values => {\r\n            dispatch(addItemTC({\r\n                id: nanoid(),\r\n                imageUrl:values.imageURL,\r\n                description: values.description,\r\n                count: Number(values.count),\r\n                comments: [],\r\n                name: values.name,\r\n                price: Number(values.price),\r\n                size:{\r\n                    width: Number(values.width),\r\n                    height:Number(values.height),\r\n                },\r\n                weight:values.weight + 'g'}\r\n                ))\r\n            props.hideModal()\r\n        },\r\n    });\r\n    return(\r\n        <div>\r\n            <NewProduct hideModal={props.hideModal} formik={formik}/>\r\n        </div>\r\n    )\r\n}\r\nexport default NewProductContainer\r\n","import React, {useState} from 'react';\r\nimport classes from \"./main.module.scss\";\r\nimport Header from \"../Header/header\";\r\nimport Product from \"../product/product\";\r\nimport NewProductContainer from \"../newProduct/newProductContainer\";\r\nimport {itemsDataType} from \"../../../bll/reducers/app-reducer\";\r\n\r\ntype propsType ={\r\n    dataItems: Array<itemsDataType>\r\n    onClickSortCountSmall: ()=>void\r\n    onClickSortCountMore: ()=>void\r\n    onClickSortName: ()=>void\r\n    onClickSortAvailable: (data:boolean)=>void\r\n}\r\n\r\nconst Main:React.FC<propsType> =(props)=>{\r\n    let [styleModal,setStyleModal]= useState(classes.modal_new_product_hide)\r\n    let onClickNewProduct =()=>{\r\n        setStyleModal(classes.modal_new_product)\r\n    }\r\n    let onClickNewProductEnd =()=>{\r\n        setStyleModal(classes.modal_new_product_hide)\r\n    }\r\n    return(\r\n        <div>\r\n            <div className={'container'}>\r\n                <div className={classes.wrapper_modal}>\r\n                        <div className={styleModal}>\r\n                            <NewProductContainer hideModal={onClickNewProductEnd}/>\r\n                        </div>\r\n                    <div className={classes.menu_style}>\r\n                        <h1>Sort:</h1>\r\n                        <div className={classes.sort_menu_style}>\r\n                            <button onClick={props.onClickSortName} className={classes.btn_sort_style}>Name</button>\r\n                        </div>\r\n                        <div className={classes.sort_menu_style}>\r\n                            <p>Count:</p>\r\n                            <button className={classes.btn_sort_style} onClick={props.onClickSortCountMore}>More</button>\r\n                            <button className={classes.btn_sort_style} onClick={props.onClickSortCountSmall}>Less</button>\r\n                        </div>\r\n                        <div className={classes.sort_menu_style}>\r\n                            <p>Available:</p>\r\n                            <input onChange={(e)=>{props.onClickSortAvailable(e.target.checked)}} type={\"checkbox\"}/>\r\n                        </div>\r\n                        <button onClick={onClickNewProduct} className={classes.btn_newProduct_style}>New Product</button>\r\n                    </div>\r\n                    <div className={'row'}>\r\n                        {props.dataItems.map((elem)=><Product\r\n                            price={elem.price}\r\n                            key={elem.id} id={elem.id}\r\n                            name={elem.name}\r\n                            img={elem.imageUrl}\r\n                            description={elem.description}\r\n                            count={elem.count}/>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Main","import React from 'react';\r\nimport Main from \"./main\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { AppRootStateType } from '../../../bll/redux-state';\r\nimport {\r\n    itemsDataType,\r\n    sortAvailableTC,\r\n    sortItemsDataCountMoreAC,\r\n    sortItemsDataCountSmallAC,\r\n    sortItemsDataNameAC\r\n} from \"../../../bll/reducers/app-reducer\";\r\n\r\n\r\n\r\nconst MainContainer =()=>{\r\n    const itemsData= useSelector<AppRootStateType, Array<itemsDataType>>(state => state.appReducer.itemsData)\r\n    const dispatch = useDispatch()\r\n\r\n    let onClickSortCountSmall = ()=>{\r\n        dispatch(sortItemsDataCountSmallAC())\r\n    }\r\n    let onClickSortCountMore = ()=>{\r\n        dispatch(sortItemsDataCountMoreAC())\r\n    }\r\n    let onClickSortName = ()=>{\r\n        dispatch(sortItemsDataNameAC())\r\n\r\n    }\r\n    let onClickSortAvailable = (data: boolean)=>{\r\n        dispatch(sortAvailableTC(data))\r\n    }\r\n    return(\r\n        <Main onClickSortAvailable={onClickSortAvailable} onClickSortName={onClickSortName} onClickSortCountMore={onClickSortCountMore} onClickSortCountSmall={onClickSortCountSmall} dataItems={itemsData}/>\r\n    )\r\n}\r\nexport default  MainContainer","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classes from \"./isSure.module.scss\"\r\n\r\ntype propsType ={\r\n    onClickNo: ()=>void\r\n    OnClickYes: ()=>void\r\n}\r\n\r\nconst IsSure:React.FC<propsType> = (props)=>{\r\n    return(\r\n        <div className={classes.positionModal}>\r\n            <div className={classes.backGround}>\r\n                <h1>Are you sure???</h1>\r\n                <div>\r\n                    <NavLink to={'/'}><button onClick={props.OnClickYes}  className={classes.btn_sure}>Yes</button></NavLink>\r\n                    <button onClick={props.onClickNo} className={classes.btn_no}>No</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default IsSure","import React, {ChangeEvent, useState} from \"react\";\r\nimport classes from \"./productPresentation.module.scss\"\r\nimport IsSure from \"../is-sure/isSure\";\r\n\r\ntype propsType ={\r\n    sendCommentItem: (id: string, comment: string)=>void\r\n    id:string\r\n    count:number\r\n    width:number\r\n    height:number\r\n    weight: string\r\n    price: number\r\n    description:string\r\n    deleteItem:(id:string)=>void\r\n    comments: Array<{id: string, productId:string, description:string, date: string}>\r\n}\r\n\r\nconst ProductPresentation:React.FC<propsType> = (props)=>{\r\n    let [comment, setComment] = useState('');\r\n    let [styleModalDelete,setStyleModalDelete]= useState(classes.modal_new_product_hide)\r\n    let onClickDelete =()=>{\r\n        setStyleModalDelete(classes.modal_new_product)\r\n    }\r\n    let onClickHide =()=>{\r\n        setStyleModalDelete(classes.modal_new_product_hide)\r\n    }\r\n    let OnClickAgain =()=>{\r\n        setStyleModalDelete(classes.modal_new_product_hide)\r\n        props.deleteItem(props.id)\r\n\r\n    }\r\n    let onChangeComment= (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        setComment(e.currentTarget.value)\r\n    }\r\n    let onClickAdd=()=>{\r\n        if (comment !== \"\"){\r\n            props.sendCommentItem(props.id, comment)\r\n            setComment('')\r\n        }\r\n    }\r\n    return(\r\n        <div className={'container'}>\r\n            <div className={classes.back_ground}>\r\n                <div className={styleModalDelete}>\r\n                    <IsSure onClickNo={onClickHide} OnClickYes={OnClickAgain}/>\r\n                </div>\r\n                <div className={'row'}>\r\n                    <div className={'col-7'}>\r\n                        <div className={classes.img_style}>\r\n                            <img src={'https://www.fsequence.photography/wp-content/uploads/2015/09/product-photography-2-85.jpg'}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className={'col-5'}>\r\n                        <div className={classes.manage_block}>\r\n                            <div className={classes.btn_block}>\r\n                                <button className={classes.button_edit}>Edit</button>\r\n                                <button onClick={onClickDelete} className={classes.button_delete}>Delete</button>\r\n                            </div>\r\n                            <div className={classes.height_desc}>\r\n                                <p>Price: <span>{props.price}$</span></p>\r\n                            </div>\r\n                            <div className={classes.low_desc}>\r\n                                <h1>Properties</h1>\r\n                                <p>-count: <span>{props.count}</span></p>\r\n                                <p>-size: {props.width}x{props.height}</p>\r\n                                <p>-weight: <span>{props.weight}</span></p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={classes.low_info_style}>\r\n                    <div>\r\n                        <h1>Description</h1>\r\n                        <p>{props.description}</p>\r\n                    </div>\r\n                    <div className={classes.comments_block}>\r\n                        <h1>Comments</h1>\r\n                        <div className={classes.positionItems}>\r\n                            <textarea onChange={onChangeComment} value={comment}>\r\n                            </textarea>\r\n                            <button onClick={onClickAdd}>Send</button>\r\n                        </div>\r\n                        <div>\r\n                            {props.comments.map(elem =>  <div className={classes.back_ground} key={elem.id}><p>{elem.description}</p><p>{elem.date}</p></div>)}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ProductPresentation","import React, {useEffect} from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport ProductPresentation from \"./productPresentation\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../bll/redux-state\";\r\nimport {addCommentTC, deleteItemTC, itemsDataType, setSelectedItemDataAC} from \"../../../bll/reducers/app-reducer\";\r\nimport {nanoid} from \"nanoid\";\r\n\r\ntype Params ={\r\n    itemId:string\r\n}\r\n\r\nconst ProductPresentationContainer = ()=>{\r\n    const dispatch = useDispatch()\r\n    let params = useParams<Params>()\r\n    const item= useSelector<AppRootStateType, itemsDataType>(state => state.appReducer.selectedItem)\r\n    useEffect(()=>{\r\n        dispatch(setSelectedItemDataAC(params.itemId))\r\n    }, [params.itemId])\r\n    let deleteItem= (id:string)=>{\r\n        dispatch(deleteItemTC(id))\r\n    }\r\n    useEffect(()=>{\r\n        console.log('done')\r\n    }, [item])\r\n    let sendCommentItem= (id:string,comment:string)=>{\r\n        let today = new Date();\r\n        let dd = String(today.getDate()).padStart(2, '0');\r\n        let mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n        let yyyy = today.getFullYear();\r\n        let date = mm + '/' + dd + '/' + yyyy;\r\n        let newComment = {id: nanoid(), productId: item.id, description: comment, date: date}\r\n        dispatch(addCommentTC(id,newComment))\r\n    }\r\n    return(\r\n        <ProductPresentation comments={item.comments} sendCommentItem={sendCommentItem} height={item.size.height} width={item.size.width} deleteItem={deleteItem} id={item.id} weight={item.weight} price={item.price} count={item.count} description={item.description} />\r\n    )\r\n}\r\nexport default ProductPresentationContainer","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classes from \"./header.module.scss\"\r\n\r\nconst Header = ()=>{\r\n    return(\r\n        <div className={'container'}>\r\n            <div className={classes.backGround}>\r\n                <h1>Shop</h1>\r\n                <NavLink to={'/'} className={classes.home_btn}>Go home</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Header","import React, {useEffect} from 'react';\nimport './App.css';\nimport MainContainer from \"./main/ui/components/main/mainContainer\";\nimport ProductPresentationContainer from \"./main/ui/components/product-presentation/productPresentationContainer\";\nimport Header from \"./main/ui/components/Header/header\";\nimport { Route } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { getItemsTC } from './main/bll/reducers/app-reducer';\n\nfunction App() {\n    const dispatch = useDispatch()\n    useEffect(()=>{\n        dispatch(getItemsTC())\n    },[])\n  return (\n    <div>\n        <Header/>\n        <Route exact  path={'/'} render={()=>\n            <MainContainer/>\n        }/>\n        <Route exact path={'/item/:itemId?'} render={()=>\n            <ProductPresentationContainer/>\n        }/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware  from \"redux-thunk\"\r\nimport { appReducer } from \"./reducers/app-reducer\";\r\nexport type ReduxStateType = ReturnType<typeof reducersBatch>\r\n\r\n\r\nexport type reduxStoreType = typeof store\r\nexport  type reduxDispatchType = typeof  dispatch;\r\n\r\nlet  reducersBatch = combineReducers({\r\n    appReducer:appReducer,\r\n});\r\n\r\n\r\nexport  const  store = createStore(reducersBatch, applyMiddleware(thunkMiddleware));\r\n\r\nexport type AppRootStateType = ReturnType<typeof reducersBatch>\r\n\r\nlet dispatch = store.dispatch","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { Provider } from 'react-redux';\nimport { store } from './main/bll/redux-state';\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <React.StrictMode>\n                <App />\n            </React.StrictMode>\n        </BrowserRouter>\n    </Provider>, document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}